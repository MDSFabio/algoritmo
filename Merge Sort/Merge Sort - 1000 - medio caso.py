import time

def mergeSort(alist, comparisons=0, swaps=0):
    if len(alist) > 1:
        mid = len(alist) // 2
        lefthalf = alist[:mid]
        righthalf = alist[mid:]

        comparisons, swaps = mergeSort(lefthalf, comparisons, swaps)
        comparisons, swaps = mergeSort(righthalf, comparisons, swaps)

        i = 0
        j = 0
        k = 0
        while i < len(lefthalf) and j < len(righthalf):
            comparisons += 1
            if lefthalf[i] < righthalf[j]:
                swaps += 1
                alist[k] = lefthalf[i]
                i += 1
            else:
                swaps += 1
                alist[k] = righthalf[j]
                j += 1
            k += 1

        while i < len(lefthalf):
            swaps += 1
            alist[k] = lefthalf[i]
            i += 1
            k += 1

        while j < len(righthalf):
            swaps += 1
            alist[k] = righthalf[j]
            j += 1
            k += 1

    return comparisons, swaps

alist = [159035,584951,830451,931646,51191,33679,841475,923298,414571,640489,674007,141434,598594,190286,243483,450743,692266,126909,153172,397504,705470,289639,909327,189731,550699,367659,517176,281001,796891,630138,674436,785895,468836,864923,480086,832487,856745,44389,669711,769869,769717,725486,579794,39103,814897,878879,796853,674907,320433,719262,473656,556917,799568,421357,685887,294627,856921,684747,459263,702771,653140,979348,73659,337760,753432,706903,684634,394207,124247,293598,606658,496349,265817,67645,138141,896610,374337,918566,35864,417820,43230,467293,182486,974080,446754,264891,888084,603848,833152,209938,236539,446932,231654,940691,219412,49291,774821,334053,646909,181932,680804,252741,108153,108580,965306,53217,654184,554790,427583,868531,57594,766167,159591,152206,786974,960593,342820,197183,300893,733754,499895,713013,557787,599267,755880,400451,451969,826655,674115,105010,863885,790020,293218,387507,217474,17088,81698,743716,536746,916610,879095,127793,875070,687055,234970,59915,888168,130934,508663,988222,60684,586215,528547,192850,404106,74230,728679,44985,20840,25426,40016,199838,959731,57756,102437,300137,820572,779810,519131,382146,45133,899855,663732,572997,156591,408923,71296,978455,406018,875369,130969,183698,595140,728306,989066,427733,195320,948511,121999,456163,619046,249725,6013,177908,144688,215904,618950,384339,593067,526589,159411,278626,706107,296730,331100,540938,774351,66324,504260,819417,284358,381270,785421,281393,987572,627073,410645,5248,249569,688221,852371,182757,591283,157885,223928,947050,248565,949012,555269,575945,765202,998318,267708,92461,224090,684268,79039,59379,667063,670338,9188,865842,186373,230093,306002,931635,883297,786453,860390,434518,713703,598430,107628,87736,757838,233039,500419,607773,26017,758223,421570,200207,140388,303297,11784,358678,777952,925892,904098,769311,540965,114083,391665,700059,730485,682979,940607,910516,617753,122825,350502,132734,895562,476958,83551,596011,76231,523286,602700,493989,295069,693994,320174,188046,686549,857018,697850,803070,996872,444381,234771,864697,971239,24754,746017,68969,990922,932496,295667,710714,906067,896553,756605,279500,244440,416684,900817,823127,425721,725815,514006,848116,162998,174348,804433,216240,947909,29414,273220,107743,35931,63496,475110,568766,331851,175133,84908,169072,832651,995634,625184,195556,118971,694173,677312,906314,506047,899223,170680,20968,267483,153625,105221,459405,419311,733207,123177,840616,682010,143116,510953,204969,980276,696401,431707,26130,681902,786846,140578,679624,214093,408909,134218,564842,542875,275161,12496,589042,659001,171063,814053,776393,287368,544593,50676,437649,916163,105365,600335,17748,557325,828759,73945,118557,567280,163239,56266,951664,744553,702080,329555,543224,934085,385668,958917,837322,965605,105222,16534,187985,219635,425894,989275,756619,940000,452711,433203,751148,216517,645547,36249,923882,365632,872228,713900,998785,932507,764442,350719,482187,42896,343921,452114,417357,645096,234215,741356,63380,260459,367477,253540,380525,374040,643955,304193,180604,804938,443994,436120,98926,252623,188915,418794,318593,233549,576147,789583,205608,840757,741680,48567,287180,28811,166611,957254,923826,742275,343901,505906,383299,826398,179348,119127,638954,86349,2335,405820,371545,526938,664273,708230,443351,802303,21218,441417,7290,617570,645303,400567,726995,29623,931683,983460,69161,265632,421724,410932,520412,70069,419472,892943,408173,786532,778990,166913,569375,164981,54040,423569,73778,393721,902772,623570,568432,157211,287729,413539,316908,518403,64177,409207,437979,856320,67748,444067,369888,970755,770555,403231,193495,581685,431947,62054,434320,936748,107814,144465,643782,333415,385954,618323,175241,579311,527450,723345,367528,11685,15037,961897,999908,330520,95026,419856,473257,961674,855306,147208,29905,699827,737741,85661,614640,813438,604094,896851,754328,664261,615499,995481,756492,187999,24104,347379,317880,166762,142639,784249,396801,132781,740200,970507,538272,550290,743762,311553,203966,115553,192607,288033,963850,804271,301800,37287,835502,967365,437512,10628,467108,983850,34888,490614,557898,991512,440947,698195,997396,822361,180699,406727,367766,292340,415399,255816,770498,311731,431464,752190,94435,694474,80993,526988,767267,11900,344167,446905,373699,951580,292461,803523,883307,275288,51215,744028,992304,391905,713883,673815,77019,64842,804641,736471,69548,142541,226191,291037,819461,860193,71762,697713,155226,356845,496659,116458,837173,191816,334073,141002,877462,198902,520417,324501,569641,307158,967239,536568,771055,586386,740887,678714,212219,905702,823470,983631,674741,991798,240958,33511,901067,4909,858077,32190,159521,451155,259960,294941,327495,277524,152067,605565,208938,205384,390676,720756,795065,891960,302518,452274,988972,729046,61115,477053,803514,654119,948029,368642,62020,46182,195380,892853,313463,680621,214776,179222,988015,130521,454355,993346,521396,9785,31077,55330,848110,956158,278191,897136,844770,577251,556336,571844,64895,49429,521857,845267,988096,897408,143456,687905,853900,207236,610302,946139,870859,344697,239533,108736,238476,285538,892930,518561,43789,454688,261628,773770,107862,295960,492485,682204,808297,109840,315171,819914,588293,226412,258619,828693,591304,494258,781937,535356,296720,394687,805469,242027,666936,724132,559291,861141,448981,525807,210321,405183,123355,499665,921025,357452,639874,566690,313169,13883,784801,54565,477641,399176,608126,650336,763219,708195,198953,658048,856357,681540,121489,52224,462457,756890,104930,574690,178265,180277,954157,947630,213809,721763,941936,396639,1739,564810,857605,544769,382916,305987,298685,250426,347561,637427,817923,943618,974302,278969,498612,234781,583126,666353,20546,472646,492601,372979,789480,1038,822431,94668,379643,420441,501244,20194,933166,173949,108888,998054,307456,648173,604099,945921,820567,908683,851822,540820,563519,528750,510950,544180,796296,818777,181508,623548,302140,264751,822155,798627,222725,933324,997190,170695,935674,804309,395776,334010,605648,993794,355976,837584,986555,958274,320691,121333,536426,601684,490047,325807,735919,162309,941800,359095,527679,585361,18922,692938,360327,393323,824118,861750,652286,377321,19724,908191,799160,948133,989777,405965,879362,79618,406027,67158,376167,171587,429694,406124,869731,818272,248241,147023,112842,528450,335212,473642,285895,943073,567723,714875,966747,783870,523691,888003,291511,829882,94834,713242,638889,611761,66605,360244,458895,174325,749466,596341,194820,745937,213238,751626,351617,523498,602611,449578,576783,579233,204164,970140,454326,311334,652227,682897,772877,837673,789404,792851,443690,44935,201749,812284,175564,469655,780030,446142,982638,232486,525048,721706,64351,271373,4962,556079,109202,579445,365126,164997,570118,379937,768013,409946,553560,716345,615621,170856,408328,753831,644942,102580,186906,819952,626086]

start_time = time.time()
comparisons, swaps = mergeSort(alist)
end_time = time.time()

print(f"Lista Ordenada: {alist}")
print(f"Quantidade de Comparacoes: {comparisons}")
print(f"Quantidade de trocas: {swaps}")
print(f"Tempo de ordenacao: {round(end_time - start_time, 9)} segundos")
